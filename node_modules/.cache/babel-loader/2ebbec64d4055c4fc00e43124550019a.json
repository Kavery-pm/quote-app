{"ast":null,"code":"var _jsxFileName = \"E:\\\\quote-app\\\\quote-app\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst SortQuotes = (quotes, ascending) => {\n  if (ascending) {\n    return quote;\n  }\n};\n\n_c = SortQuotes;\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const changeSortingHandler = () => {\n    history.push(\"/quotes?sort=\" + (isSortAscending ? 'desc' : 'asc'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: isSortAscending ? 'Descending' : 'Ascending'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c2 = QuoteList;\nexport default QuoteList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortQuotes\");\n$RefreshReg$(_c2, \"QuoteList\");","map":{"version":3,"sources":["E:/quote-app/quote-app/src/components/quotes/QuoteList.js"],"names":["Fragment","useHistory","useLocation","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","SortQuotes","quote","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortAscending","get","changeSortingHandler","push","sorting","list","map","author","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;AACxC,SAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;AACrC,QAAIH,SAAJ,EAAe;AACb,aAAOE,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;AACD,KAFD,MAEO;AACL,aAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;AACD;AACF,GANM,CAAP;AAOD,CARD;;AAUA,MAAMC,UAAU,GAAG,CAACN,MAAD,EAAQC,SAAR,KAAoB;AACrC,MAAGA,SAAH,EAAa;AACX,WAAOM,KAAP;AACD;AAEF,CALD;;KAAMD,U;;AAON,MAAME,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,OAAO,GAAGf,UAAU,EAA1B;AACA,QAAMgB,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB;AAEA,QAAMC,eAAe,GAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA4B,KAApD;;AAEA,QAAMC,oBAAoB,GAAG,MAAM;AACjCP,IAAAA,OAAO,CAACQ,IAAR,CAAa,mBAAiBH,eAAe,GAAG,MAAH,GAAY,KAA5C,CAAb;AACD,GAFD;;AAGA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEjB,OAAO,CAACqB,OAAxB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEF,oBAAjB;AAAA,kBAAwCF,eAAe,GAAG,YAAH,GAAkB;AAAzE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,SAAS,EAAEjB,OAAO,CAACsB,IAAvB;AAAA,gBACGX,KAAK,CAACT,MAAN,CAAaqB,GAAb,CAAkBd,KAAD,iBAChB,QAAC,SAAD;AAEE,QAAA,EAAE,EAAEA,KAAK,CAACF,EAFZ;AAGE,QAAA,MAAM,EAAEE,KAAK,CAACe,MAHhB;AAIE,QAAA,IAAI,EAAEf,KAAK,CAACgB;AAJd,SACOhB,KAAK,CAACF,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3BD;;GAAMG,S;UACYb,U,EACCC,W;;;MAFbY,S;AA6BN,eAAeA,SAAf","sourcesContent":["import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst SortQuotes = (quotes,ascending)=>{\n  if(ascending){\n    return quote\n  }\n\n}\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const changeSortingHandler = () => {\n    history.push(\"/quotes?sort=\"+(isSortAscending ? 'desc' : 'asc'));\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>{isSortAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}